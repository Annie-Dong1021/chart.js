<template name='main'>
    <safe-area>
        <frame v-if="api.platform=='app'" useWKWebView avm="false" name="line_basic_frm" style="width:100%;height:250px" url="./line_basic_frm.html">
        </frame>
        <view v-else class="canvas-wrap" style="margin:10px;height:250px;">
            <canvas type={'2d'} id="canvas" style="height:100%;width:100%;"></canvas>
        </view>
        <view style="flex-direction: row;padding:10px">
            <text class="btn" @click="addData" >Add Data</text>
            <text class="btn" @click="removeData" >Remove Data</text>
        </view>
    </safe-area>
</template>
<script>
import "../../script/Chart.min.js";
export default {
    name: "main", 
    data() {
        return {};
    },
    methods: {
        addData(){
            if(api.platform == 'app'){
                this.sendEventFrm('addData')
                return
            }
            if (this.chart.config.data.datasets.length > 0) {
				var month = this.chart.MONTHS[this.chart.config.data.labels.length % this.chart.MONTHS.length];
				this.chart.config.data.labels.push(month);

				this.chart.config.data.datasets.forEach(function(dataset) {
					dataset.data.push(Math.floor(-100+Math.random()*200));
				});

				this.chart.instance.update();
			}
        },
        removeData(){
            if(api.platform == 'app'){
                this.sendEventFrm('removeData')
                return
            }
            this.chart.config.data.labels.splice(-1, 1); // remove the label first

			this.chart.config.data.datasets.forEach(function(dataset) {
				dataset.data.pop();
			});

			this.chart.instance.update();
        },
        sendEventFrm(type){
            api.sendEvent({
                name: 'chartChange',
                extra: type||this.chart.config
            })
        }
    }, 
    apiready() {
        var Chart = window.Chart;
        this.chart = {};
        this.chart.MONTHS = ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二'];
        this.chart.config = createConfig()
        if(api.platform == 'app'){
            api.setStatusBarStyle({
                color: '#aaa',
                style: 'light'
            })
            api.addEventListener({
                name: 'ready_line_basic_frm'
            }, (ret, err)=>{
                this.sendEventFrm()
            });
            return
        }
        this.chart.instance = new Chart('canvas',this.chart.config)

        function createConfig(type) {
            return {
                type: 'line',
                data: {
                    labels: ['一', '二', '三', '四', '五', '六'],
                    datasets: [{
                        label: '数据一',
                        backgroundColor: 'rgba(255,0,0,0.3)',
                        borderColor: 'rgba(255,0,0,0.3)',
                        data: [
                            Math.floor(-100+Math.random()*200),
                            Math.floor(-100+Math.random()*200),
                            Math.floor(-100+Math.random()*200),
                            Math.floor(-100+Math.random()*200),
                            Math.floor(-100+Math.random()*200),
                            Math.floor(-100+Math.random()*200),
                        ],
                        fill: false,
                    }, {
                        label: '数据二',
                        fill: false,
                        backgroundColor: 'rgba(0,0,255,0.3)',
                        borderColor: 'rgba(0,0,255,0.3)',
                        data: [
                            Math.floor(-100+Math.random()*200),
                            Math.floor(-100+Math.random()*200),
                            Math.floor(-100+Math.random()*200),
                            Math.floor(-100+Math.random()*200),
                            Math.floor(-100+Math.random()*200),
                            Math.floor(-100+Math.random()*200),
                        ],
                    }]
                },
                options: {
                    responsive: true,
                    tooltips: {
                        mode: 'index',
                        intersect: false,
                    },
                    hover: {
                        mode: 'nearest',
                        intersect: true
                    },
                    scales: {
                        xAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: '月'
                            }
                        }],
                        yAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Value'
                            }
                        }]
                    }
                }
            }
        }

        
    },
    

};
</script>
<style>
.btn{
    padding: 2px 10px;
    margin: 0 5px;
    background: #aaa;
    border-radius: 5px;
    color: white;
}
</style>
